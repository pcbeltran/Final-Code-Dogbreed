{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { usersCollection } from \"../data/firebase\";\n\nfunction useAllBreeds(userId, filterBreeds) {\n  _s();\n\n  const [breeds, setBreeds] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  useEffect(() => {\n    setIsLoading(true);\n\n    const onNext = snapshot => {\n      setIsLoading(false);\n      const docs = snapshot.docs;\n      setBreeds(docs);\n    };\n\n    const onError = error => {\n      setIsLoading(false);\n      setErrorMessage(\"There was a problem loading your breed ratings. Please try again.\");\n      console.error(error);\n    };\n\n    const breedref = usersCollection.doc(userId).collection(\"breeds\");\n    let unsubscribe;\n    alert(\"breeds\");\n\n    if (filterBreeds === \"A\") {\n      unsubscribe = breedref.orderBy(\"rating\", \"desc\").onSnapshot(onNext, onError);\n    } else if (filterBreeds === \"S\") {\n      unsubscribe = unsubscribe = breedref.size.where(\"S\", \"==\", true).onSnapshot(onNext, onError);\n    } else if (filterBreeds === \"M\") {\n      unsubscribe = breedref.size.where(\"M\", \"==\", true).onSnapshot(onNext, onError);\n    } else if (filterBreeds === \"L\") {\n      unsubscribe = breedref.size.where(\"L\", \"==\", true).onSnapshot(onNext, onError);\n    }\n\n    return unsubscribe;\n  }, [userId, filterBreeds]);\n  return [breeds, isLoading, errorMessage];\n}\n\n_s(useAllBreeds, \"AIPeULl4FfNU4Qfu+jD58Rdded0=\");\n\nexport default useAllBreeds;","map":{"version":3,"sources":["/Users/user/Downloads/FA20-CodeSprint-Code-master-19/Code Sprint C/Week 05/movie-app-with-accounts-starter/src/hooks/use-all-breeds.js"],"names":["useState","useEffect","usersCollection","useAllBreeds","userId","filterBreeds","breeds","setBreeds","isLoading","setIsLoading","errorMessage","setErrorMessage","onNext","snapshot","docs","onError","error","console","breedref","doc","collection","unsubscribe","alert","orderBy","onSnapshot","size","where"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,eAAT,QAAgC,kBAAhC;;AAEA,SAASC,YAAT,CAAsBC,MAAtB,EAA8BC,YAA9B,EAA4C;AAAA;;AAC1C,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACQ,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACU,YAAD,EAAeC,eAAf,IAAkCX,QAAQ,CAAC,EAAD,CAAhD;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,YAAY,CAAC,IAAD,CAAZ;;AAEA,UAAMG,MAAM,GAAIC,QAAD,IAAc;AAC3BJ,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACA,YAAMK,IAAI,GAAGD,QAAQ,CAACC,IAAtB;AACAP,MAAAA,SAAS,CAACO,IAAD,CAAT;AACD,KAJD;;AAMA,UAAMC,OAAO,GAAIC,KAAD,IAAW;AACzBP,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACAE,MAAAA,eAAe,CAAC,mEAAD,CAAf;AACAM,MAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACD,KAJD;;AAMA,UAAME,QAAQ,GAAGhB,eAAe,CAACiB,GAAhB,CAAoBf,MAApB,EAA4BgB,UAA5B,CAAuC,QAAvC,CAAjB;AACA,QAAIC,WAAJ;AACAC,IAAAA,KAAK,CAAC,QAAD,CAAL;;AACA,QAAIjB,YAAY,KAAK,GAArB,EAA0B;AACxBgB,MAAAA,WAAW,GAAGH,QAAQ,CAACK,OAAT,CAAiB,QAAjB,EAA2B,MAA3B,EAAmCC,UAAnC,CAA8CZ,MAA9C,EAAsDG,OAAtD,CAAd;AACD,KAFD,MAEO,IAAIV,YAAY,KAAK,GAArB,EAA0B;AAC/BgB,MAAAA,WAAW,GACXA,WAAW,GAAGH,QAAQ,CAACO,IAAT,CAAcC,KAAd,CAAoB,GAApB,EAAyB,IAAzB,EAA+B,IAA/B,EAAqCF,UAArC,CAAgDZ,MAAhD,EAAwDG,OAAxD,CADd;AAED,KAHM,MAGA,IAAIV,YAAY,KAAK,GAArB,EAA0B;AAC/BgB,MAAAA,WAAW,GAAGH,QAAQ,CAACO,IAAT,CAAcC,KAAd,CAAoB,GAApB,EAAyB,IAAzB,EAA+B,IAA/B,EAAqCF,UAArC,CAAgDZ,MAAhD,EAAwDG,OAAxD,CAAd;AACD,KAFM,MAEA,IAAIV,YAAY,KAAK,GAArB,EAA0B;AAC/BgB,MAAAA,WAAW,GAAGH,QAAQ,CAACO,IAAT,CAAcC,KAAd,CAAoB,GAApB,EAAyB,IAAzB,EAA+B,IAA/B,EAAqCF,UAArC,CAAgDZ,MAAhD,EAAwDG,OAAxD,CAAd;AACD;;AAED,WAAOM,WAAP;AACD,GA9BQ,EA8BN,CAACjB,MAAD,EAASC,YAAT,CA9BM,CAAT;AAgCA,SAAO,CAACC,MAAD,EAASE,SAAT,EAAoBE,YAApB,CAAP;AACD;;GAtCQP,Y;;AAwCT,eAAeA,YAAf","sourcesContent":["import { useState, useEffect } from \"react\";\nimport { usersCollection } from \"../data/firebase\";\n\nfunction useAllBreeds(userId, filterBreeds) {\n  const [breeds, setBreeds] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    const onNext = (snapshot) => {\n      setIsLoading(false);\n      const docs = snapshot.docs;\n      setBreeds(docs);\n    };\n\n    const onError = (error) => {\n      setIsLoading(false);\n      setErrorMessage(\"There was a problem loading your breed ratings. Please try again.\");\n      console.error(error);\n    };\n\n    const breedref = usersCollection.doc(userId).collection(\"breeds\");\n    let unsubscribe;\n    alert(\"breeds\");\n    if (filterBreeds === \"A\") {\n      unsubscribe = breedref.orderBy(\"rating\", \"desc\").onSnapshot(onNext, onError);\n    } else if (filterBreeds === \"S\") {\n      unsubscribe =\n      unsubscribe = breedref.size.where(\"S\", \"==\", true).onSnapshot(onNext, onError);\n    } else if (filterBreeds === \"M\") {\n      unsubscribe = breedref.size.where(\"M\", \"==\", true).onSnapshot(onNext, onError);\n    } else if (filterBreeds === \"L\") {\n      unsubscribe = breedref.size.where(\"L\", \"==\", true).onSnapshot(onNext, onError);\n    }\n\n    return unsubscribe;\n  }, [userId, filterBreeds]);\n\n  return [breeds, isLoading, errorMessage];\n}\n\nexport default useAllBreeds;\n"]},"metadata":{},"sourceType":"module"}