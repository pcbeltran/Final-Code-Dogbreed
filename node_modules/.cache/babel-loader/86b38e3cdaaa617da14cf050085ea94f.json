{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { breedsCollection } from \"../data/firebase\";\n\nfunction useBreed(userId, breedId) {\n  _s();\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [breedData, setBreedData] = useState(null);\n  useEffect(() => {\n    async function getBreed() {\n      setIsLoading(true);\n\n      try {\n        const breedSnapshot = await usersCollection.doc(userId).collection(\"breeds\").doc(breedId).get();\n\n        if (!breedSnapshot.exists) {\n          throw new Error(\"No such breed exists!\");\n        }\n\n        const data = breedSnapshot.data();\n        setBreedData(data);\n      } catch (error) {\n        setErrorMessage(\"Something went wrong. Please try again.\");\n        console.error(error);\n      }\n\n      setIsLoading(false);\n    }\n\n    getBreed();\n  }, [breedId]);\n  return [breedData, isLoading, errorMessage];\n}\n\n_s(useBreed, \"xPbAPKoyS/9XQEhT6OsDKRe7/T8=\");\n\nexport default useBreed;","map":{"version":3,"sources":["/Users/user/Downloads/FA20-CodeSprint-Code-master-19/Code Sprint C/Week 05/movie-app-with-accounts-starter/src/hooks/use-breed.js"],"names":["useState","useEffect","breedsCollection","useBreed","userId","breedId","isLoading","setIsLoading","errorMessage","setErrorMessage","breedData","setBreedData","getBreed","breedSnapshot","usersCollection","doc","collection","get","exists","Error","data","error","console"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,gBAAT,QAAiC,kBAAjC;;AAEA,SAASC,QAAT,CAAkBC,MAAlB,EAA0BC,OAA1B,EAAmC;AAAA;;AACjC,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACQ,YAAD,EAAeC,eAAf,IAAkCT,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACU,SAAD,EAAYC,YAAZ,IAA4BX,QAAQ,CAAC,IAAD,CAA1C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAeW,QAAf,GAA0B;AACxBL,MAAAA,YAAY,CAAC,IAAD,CAAZ;;AAEA,UAAI;AACF,cAAMM,aAAa,GAAG,MAAMC,eAAe,CACxCC,GADyB,CACrBX,MADqB,EAEzBY,UAFyB,CAEd,QAFc,EAGzBD,GAHyB,CAGrBV,OAHqB,EAIzBY,GAJyB,EAA5B;;AAMA,YAAI,CAACJ,aAAa,CAACK,MAAnB,EAA2B;AACzB,gBAAM,IAAIC,KAAJ,CAAU,uBAAV,CAAN;AACD;;AAED,cAAMC,IAAI,GAAGP,aAAa,CAACO,IAAd,EAAb;AACAT,QAAAA,YAAY,CAACS,IAAD,CAAZ;AACD,OAbD,CAaE,OAAOC,KAAP,EAAc;AACdZ,QAAAA,eAAe,CAAC,yCAAD,CAAf;AACAa,QAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACD;;AAEDd,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD;;AAEDK,IAAAA,QAAQ;AACT,GA1BQ,EA0BN,CAACP,OAAD,CA1BM,CAAT;AA4BA,SAAO,CAACK,SAAD,EAAYJ,SAAZ,EAAuBE,YAAvB,CAAP;AACD;;GAlCQL,Q;;AAoCT,eAAeA,QAAf","sourcesContent":["import { useState, useEffect } from \"react\";\nimport { breedsCollection } from \"../data/firebase\";\n\nfunction useBreed(userId, breedId) {\n  const [isLoading, setIsLoading] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [breedData, setBreedData] = useState(null);\n\n  useEffect(() => {\n    async function getBreed() {\n      setIsLoading(true);\n\n      try {\n        const breedSnapshot = await usersCollection\n          .doc(userId)\n          .collection(\"breeds\")\n          .doc(breedId)\n          .get();\n\n        if (!breedSnapshot.exists) {\n          throw new Error(\"No such breed exists!\");\n        }\n\n        const data = breedSnapshot.data();\n        setBreedData(data);\n      } catch (error) {\n        setErrorMessage(\"Something went wrong. Please try again.\");\n        console.error(error);\n      }\n\n      setIsLoading(false);\n    }\n\n    getBreed();\n  }, [breedId]);\n\n  return [breedData, isLoading, errorMessage];\n}\n\nexport default useBreed;\n"]},"metadata":{},"sourceType":"module"}