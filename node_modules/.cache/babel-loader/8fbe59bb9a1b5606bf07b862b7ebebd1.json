{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/user/Downloads/FA20-CodeSprint-Code-master-19/Code Sprint C/Week 05/movie-app-with-accounts-starter/src/components/edit-breed.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport useBreed from \"../hooks/use-breed\";\nimport useSaveBreed from \"../hooks/use-save-breed\";\nimport \"./edit-breed.css\";\nimport ErrorMessage from \"./error-message\";\nimport LoadingSpinner from \"./loading-spinner\";\nimport BreedForm from \"./breed-form\";\n\nfunction EditBreed(props) {\n  _s();\n\n  const breedId = props.id;\n  const userId = props.user.uid;\n  const [breedData, isLoading, errorMessage] = useBreed(userId, breedId);\n  const [saveBreed, isSaving, formMessage] = useSaveBreed();\n\n  const onBreedSubmit = async (title, rating, releaseYear) => {\n    saveBreed({\n      title,\n      rating,\n      origin,\n      size,\n      wight\n    }, userId, breedId);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"edit-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Edit Breed\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), isLoading && /*#__PURE__*/_jsxDEV(LoadingSpinner, {\n      size: \"50px\",\n      spinnerColor: \"white\",\n      backgroundColor: \"rgb(255, 255, 255, 0.2)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this), errorMessage && /*#__PURE__*/_jsxDEV(ErrorMessage, {\n      displayAsCard: true,\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 24\n    }, this), breedData && /*#__PURE__*/_jsxDEV(BreedForm, {\n      initialState: breedData,\n      onSubmit: onBreedSubmit,\n      isSaving: isSaving,\n      message: formMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n\n_s(EditBreed, \"un9AvXBkEPlZD6qeQRMw64HKZ6g=\", false, function () {\n  return [useBreed, useSaveBreed];\n});\n\n_c = EditBreed;\nexport default EditBreed;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditBreed\");","map":{"version":3,"sources":["/Users/user/Downloads/FA20-CodeSprint-Code-master-19/Code Sprint C/Week 05/movie-app-with-accounts-starter/src/components/edit-breed.js"],"names":["React","useBreed","useSaveBreed","ErrorMessage","LoadingSpinner","BreedForm","EditBreed","props","breedId","id","userId","user","uid","breedData","isLoading","errorMessage","saveBreed","isSaving","formMessage","onBreedSubmit","title","rating","releaseYear","origin","size","wight"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,oBAArB;AACA,OAAOC,YAAP,MAAyB,yBAAzB;AACA,OAAO,kBAAP;AACA,OAAOC,YAAP,MAAyB,iBAAzB;AACA,OAAOC,cAAP,MAA2B,mBAA3B;AACA,OAAOC,SAAP,MAAsB,cAAtB;;AAEA,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AAAA;;AACxB,QAAMC,OAAO,GAAGD,KAAK,CAACE,EAAtB;AACA,QAAMC,MAAM,GAAGH,KAAK,CAACI,IAAN,CAAWC,GAA1B;AAEA,QAAM,CAACC,SAAD,EAAYC,SAAZ,EAAuBC,YAAvB,IAAuCd,QAAQ,CAACS,MAAD,EAASF,OAAT,CAArD;AACA,QAAM,CAACQ,SAAD,EAAYC,QAAZ,EAAsBC,WAAtB,IAAqChB,YAAY,EAAvD;;AAEA,QAAMiB,aAAa,GAAG,OAAOC,KAAP,EAAcC,MAAd,EAAsBC,WAAtB,KAAsC;AAC1DN,IAAAA,SAAS,CAAC;AAAEI,MAAAA,KAAF;AAASC,MAAAA,MAAT;AAAiBE,MAAAA,MAAjB;AAAyBC,MAAAA,IAAzB;AAA+BC,MAAAA;AAA/B,KAAD,EAAyCf,MAAzC,EAAiDF,OAAjD,CAAT;AACD,GAFD;;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEGM,SAAS,iBACR,QAAC,cAAD;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,YAAY,EAAC,OAFf;AAGE,MAAA,eAAe,EAAC;AAHlB;AAAA;AAAA;AAAA;AAAA,YAHJ,EASGC,YAAY,iBAAI,QAAC,YAAD;AAAc,MAAA,aAAa,MAA3B;AAAA,gBAA6BA;AAA7B;AAAA;AAAA;AAAA;AAAA,YATnB,EAUGF,SAAS,iBACR,QAAC,SAAD;AACE,MAAA,YAAY,EAAEA,SADhB;AAEE,MAAA,QAAQ,EAAEM,aAFZ;AAGE,MAAA,QAAQ,EAAEF,QAHZ;AAIE,MAAA,OAAO,EAAEC;AAJX;AAAA;AAAA;AAAA;AAAA,YAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD;;GAhCQZ,S;UAIsCL,Q,EACFC,Y;;;KALpCI,S;AAkCT,eAAeA,SAAf","sourcesContent":["import React from \"react\";\nimport useBreed from \"../hooks/use-breed\";\nimport useSaveBreed from \"../hooks/use-save-breed\";\nimport \"./edit-breed.css\";\nimport ErrorMessage from \"./error-message\";\nimport LoadingSpinner from \"./loading-spinner\";\nimport BreedForm from \"./breed-form\";\n\nfunction EditBreed(props) {\n  const breedId = props.id;\n  const userId = props.user.uid;\n\n  const [breedData, isLoading, errorMessage] = useBreed(userId, breedId);\n  const [saveBreed, isSaving, formMessage] = useSaveBreed();\n\n  const onBreedSubmit = async (title, rating, releaseYear) => {\n    saveBreed({ title, rating, origin, size, wight }, userId, breedId);\n  };\n\n  return (\n    <div className=\"edit-container\">\n      <h2>Edit Breed</h2>\n      {isLoading && (\n        <LoadingSpinner\n          size=\"50px\"\n          spinnerColor=\"white\"\n          backgroundColor=\"rgb(255, 255, 255, 0.2)\"\n        />\n      )}\n      {errorMessage && <ErrorMessage displayAsCard>{errorMessage}</ErrorMessage>}\n      {breedData && (\n        <BreedForm\n          initialState={breedData}\n          onSubmit={onBreedSubmit}\n          isSaving={isSaving}\n          message={formMessage}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default EditBreed;\n"]},"metadata":{},"sourceType":"module"}