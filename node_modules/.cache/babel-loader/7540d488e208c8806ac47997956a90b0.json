{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/user/Downloads/FA20-CodeSprint-Code-master-19/Code Sprint C/Week 05/movie-app-with-accounts-starter/src/components/edit-breed.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { breedsCollection } from \"../data/firebase\";\nimport useBreed from \"../hooks/use-breed\";\nimport useSaveBreed from \"../hooks/use-save-breed\";\nimport \"./edit-breed.css\";\nimport ErrorMessage from \"./error-message\";\nimport LoadingSpinner from \"./loading-spinner\";\nimport BreedForm from \"./breed-form\";\n\nfunction EditBreed(props) {\n  _s();\n\n  const {\n    id\n  } = props;\n  const [isLoading, setIsLoading] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [breedData, setBreedData] = useState(null);\n  const [isSaving, setIsSaving] = useState(false);\n  const [formMessage, setFormMessage] = useState(null);\n  useEffect(() => {\n    async function getBreed() {\n      setIsLoading(true);\n\n      try {\n        const breedSnapshot = await breedsCollection.doc(id).get();\n\n        if (!breedSnapshot.exists) {\n          throw new Error(\"No such breed exists!\");\n        }\n\n        const data = breedSnapshot.data();\n        setBreedData(data);\n      } catch (error) {\n        setErrorMessage(\"Something went wrong. Please try again\");\n        console.error(error);\n      }\n\n      setIsLoading(false);\n    }\n\n    getBreed();\n  }, [id]);\n\n  const onBreedSubmit = async (title, origin, rating, size, weight) => {\n    setIsSaving(true);\n    setFormMessage(\"\");\n\n    try {\n      await breedsCollection.doc(id).set({\n        title,\n        origin,\n        rating,\n        size,\n        weight\n      });\n      setFormMessage(\"Saved successfully!\");\n    } catch (error) {\n      setFormMessage(\"Something went wrong editing this breed. Please try again.\");\n      console.error(error);\n    }\n\n    setIsSaving(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"edit-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Edit Breed\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), isLoading && /*#__PURE__*/_jsxDEV(LoadingSpinner, {\n      size: \"50px\",\n      spinnerColor: \"white\",\n      backgroundColor: \"rgb(255, 255, 255, 0.2)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this), errorMessage && /*#__PURE__*/_jsxDEV(ErrorMessage, {\n      displayAsCard: true,\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 24\n    }, this), breedData && /*#__PURE__*/_jsxDEV(BreedForm, {\n      initialState: breedData,\n      onSubmit: onBreedSubmit,\n      isSaving: isSaving,\n      message: formMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n\n_s(EditBreed, \"1Ti537TUDpJBVHmQ8iseMS+5DZw=\");\n\n_c = EditBreed;\nexport default EditBreed;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditBreed\");","map":{"version":3,"sources":["/Users/user/Downloads/FA20-CodeSprint-Code-master-19/Code Sprint C/Week 05/movie-app-with-accounts-starter/src/components/edit-breed.js"],"names":["React","useState","useEffect","breedsCollection","useBreed","useSaveBreed","ErrorMessage","LoadingSpinner","BreedForm","EditBreed","props","id","isLoading","setIsLoading","errorMessage","setErrorMessage","breedData","setBreedData","isSaving","setIsSaving","formMessage","setFormMessage","getBreed","breedSnapshot","doc","get","exists","Error","data","error","console","onBreedSubmit","title","origin","rating","size","weight","set"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { breedsCollection } from \"../data/firebase\";\nimport useBreed from \"../hooks/use-breed\";\nimport useSaveBreed from \"../hooks/use-save-breed\";\nimport \"./edit-breed.css\";\nimport ErrorMessage from \"./error-message\";\nimport LoadingSpinner from \"./loading-spinner\";\nimport BreedForm from \"./breed-form\";\n\nfunction EditBreed(props) {\n  const { id } = props;\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [breedData, setBreedData] = useState(null);\n  const [isSaving, setIsSaving] = useState(false);\n  const [formMessage, setFormMessage] = useState(null);\n\n  useEffect(() => {\n    async function getBreed() {\n      setIsLoading(true);\n      try {\n        const breedSnapshot = await breedsCollection.doc(id).get();\n\n        if (!breedSnapshot.exists) {\n          throw new Error(\"No such breed exists!\");\n        }\n\n        const data = breedSnapshot.data();\n        setBreedData(data);\n      } catch (error) {\n        setErrorMessage(\"Something went wrong. Please try again\");\n        console.error(error);\n      }\n      setIsLoading(false);\n    }\n\n    getBreed();\n  }, [id]);\n\n  const onBreedSubmit = async (title, origin, rating, size, weight) => {\n    setIsSaving(true);\n    setFormMessage(\"\");\n\n    try {\n      await breedsCollection.doc(id).set({\n        title,\n        origin,\n        rating,\n        size,\n        weight,\n      });\n      setFormMessage(\"Saved successfully!\");\n    } catch (error) {\n      setFormMessage(\"Something went wrong editing this breed. Please try again.\");\n      console.error(error);\n    }\n\n    setIsSaving(false);\n  };\n\n  return (\n    <div className=\"edit-container\">\n      <h2>Edit Breed</h2>\n      {isLoading && (\n        <LoadingSpinner\n          size=\"50px\"\n          spinnerColor=\"white\"\n          backgroundColor=\"rgb(255, 255, 255, 0.2)\"\n        />\n      )}\n      {errorMessage && <ErrorMessage displayAsCard>{errorMessage}</ErrorMessage>}\n      {breedData && (\n        <BreedForm\n          initialState={breedData}\n          onSubmit={onBreedSubmit}\n          isSaving={isSaving}\n          message={formMessage}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default EditBreed;\n"]},"metadata":{},"sourceType":"module"}